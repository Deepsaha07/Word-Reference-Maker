{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./node_modules/bibtex-parse-js/bibtexParse.js","webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/lib/bibtex.ts","webpack://office-addin-taskpane/./src/lib/storage.ts","webpack://office-addin-taskpane/./src/lib/cite.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.html"],"sourcesContent":["/* start bibtexParse 0.0.22 */\n\n//Original work by Henrik Muehe (c) 2010\n//\n//CommonJS port by Mikola Lysenko 2013\n//\n//Port to Browser lib by ORCID / RCPETERS\n//\n//Issues:\n//no comment handling within strings\n//no string concatenation\n//no variable values yet\n//Grammar implemented here:\n//bibtex -> (string | preamble | comment | entry)*;\n//string -> '@STRING' '{' key_equals_value '}';\n//preamble -> '@PREAMBLE' '{' value '}';\n//comment -> '@COMMENT' '{' value '}';\n//entry -> '@' key '{' key ',' key_value_list '}';\n//key_value_list -> key_equals_value (',' key_equals_value)*;\n//key_equals_value -> key '=' value;\n//value -> value_quotes | value_braces | key;\n//value_quotes -> '\"' .*? '\"'; // not quite\n//value_braces -> '{' .*? '\"'; // not quite\n(function(exports) {\n\n    function BibtexParser() {\n        \n        this.months = [\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"];\n        this.notKey = [',','{','}',' ','='];\n        this.pos = 0;\n        this.input = \"\";\n        this.entries = new Array();\n\n        this.currentEntry = \"\";\n\n        this.setInput = function(t) {\n            this.input = t;\n        };\n\n        this.getEntries = function() {\n            return this.entries;\n        };\n\n        this.isWhitespace = function(s) {\n            return (s == ' ' || s == '\\r' || s == '\\t' || s == '\\n');\n        };\n\n        this.match = function(s, canCommentOut) {\n            if (canCommentOut == undefined || canCommentOut == null)\n                canCommentOut = true;\n            this.skipWhitespace(canCommentOut);\n            if (this.input.substring(this.pos, this.pos + s.length) == s) {\n                this.pos += s.length;\n            } else {\n                throw \"Token mismatch, expected \" + s + \", found \"\n                        + this.input.substring(this.pos);\n            };\n            this.skipWhitespace(canCommentOut);\n        };\n\n        this.tryMatch = function(s, canCommentOut) {\n            if (canCommentOut == undefined || canCommentOut == null)\n                canCommentOut = true;\n            this.skipWhitespace(canCommentOut);\n            if (this.input.substring(this.pos, this.pos + s.length) == s) {\n                return true;\n            } else {\n                return false;\n            };\n            this.skipWhitespace(canCommentOut);\n        };\n\n        /* when search for a match all text can be ignored, not just white space */\n        this.matchAt = function() {\n            while (this.input.length > this.pos && this.input[this.pos] != '@') {\n                this.pos++;\n            };\n\n            if (this.input[this.pos] == '@') {\n                return true;\n            };\n            return false;\n        };\n\n        this.skipWhitespace = function(canCommentOut) {\n            while (this.isWhitespace(this.input[this.pos])) {\n                this.pos++;\n            };\n            if (this.input[this.pos] == \"%\" && canCommentOut == true) {\n                while (this.input[this.pos] != \"\\n\") {\n                    this.pos++;\n                };\n                this.skipWhitespace(canCommentOut);\n            };\n        };\n\n        this.value_braces = function() {\n            var bracecount = 0;\n            this.match(\"{\", false);\n            var start = this.pos;\n            var escaped = false;\n            while (true) {\n                if (!escaped) {\n                    if (this.input[this.pos] == '}') {\n                        if (bracecount > 0) {\n                            bracecount--;\n                        } else {\n                            var end = this.pos;\n                            this.match(\"}\", false);\n                            return this.input.substring(start, end);\n                        };\n                    } else if (this.input[this.pos] == '{') {\n                        bracecount++;\n                    } else if (this.pos >= this.input.length - 1) {\n                        throw \"Unterminated value\";\n                    };\n                };\n                if (this.input[this.pos] == '\\\\' && escaped == false)\n                    escaped = true;\n                else\n                    escaped = false;\n                this.pos++;\n            };\n        };\n\n        this.value_comment = function() {\n            var str = '';\n            var brcktCnt = 0;\n            while (!(this.tryMatch(\"}\", false) && brcktCnt == 0)) {\n                str = str + this.input[this.pos];\n                if (this.input[this.pos] == '{')\n                    brcktCnt++;\n                if (this.input[this.pos] == '}')\n                    brcktCnt--;\n                if (this.pos >= this.input.length - 1) {\n                    throw \"Unterminated value:\" + this.input.substring(start);\n                };\n                this.pos++;\n            };\n            return str;\n        };\n\n        this.value_quotes = function() {\n            this.match('\"', false);\n            var start = this.pos;\n            var escaped = false;\n            while (true) {\n                if (!escaped) {\n                    if (this.input[this.pos] == '\"') {\n                        var end = this.pos;\n                        this.match('\"', false);\n                        return this.input.substring(start, end);\n                    } else if (this.pos >= this.input.length - 1) {\n                        throw \"Unterminated value:\" + this.input.substring(start);\n                    };\n                }\n                if (this.input[this.pos] == '\\\\' && escaped == false)\n                    escaped = true;\n                else\n                    escaped = false;\n                this.pos++;\n            };\n        };\n\n        this.single_value = function() {\n            var start = this.pos;\n            if (this.tryMatch(\"{\")) {\n                return this.value_braces();\n            } else if (this.tryMatch('\"')) {\n                return this.value_quotes();\n            } else {\n                var k = this.key();\n                if (k.match(\"^[0-9]+$\"))\n                    return k;\n                else if (this.months.indexOf(k.toLowerCase()) >= 0)\n                    return k.toLowerCase();\n                else\n                    throw \"Value expected:\" + this.input.substring(start) + ' for key: ' + k;\n            \n            };\n        };\n\n        this.value = function() {\n            var values = [];\n            values.push(this.single_value());\n            while (this.tryMatch(\"#\")) {\n                this.match(\"#\");\n                values.push(this.single_value());\n            };\n            return values.join(\"\");\n        };\n\n        this.key = function() {\n            var start = this.pos;\n            while (true) {\n                if (this.pos >= this.input.length) {\n                    throw \"Runaway key\";\n                };\n                                // а-яА-Я is Cyrillic\n                //console.log(this.input[this.pos]);\n                if (this.notKey.indexOf(this.input[this.pos]) >= 0) {\n                    return this.input.substring(start, this.pos);\n                } else {\n                    this.pos++;\n                    \n                };\n            };\n        };\n\n        this.key_equals_value = function() {\n            var key = this.key();\n            if (this.tryMatch(\"=\")) {\n                this.match(\"=\");\n                var val = this.value();\n                return [ key, val ];\n            } else {\n                throw \"... = value expected, equals sign missing:\"\n                        + this.input.substring(this.pos);\n            };\n        };\n\n        this.key_value_list = function() {\n            var kv = this.key_equals_value();\n            this.currentEntry['entryTags'] = {};\n            this.currentEntry['entryTags'][kv[0]] = kv[1];\n            while (this.tryMatch(\",\")) {\n                this.match(\",\");\n                // fixes problems with commas at the end of a list\n                if (this.tryMatch(\"}\")) {\n                    break;\n                }\n                ;\n                kv = this.key_equals_value();\n                this.currentEntry['entryTags'][kv[0]] = kv[1];\n            };\n        };\n\n        this.entry_body = function(d) {\n            this.currentEntry = {};\n            this.currentEntry['citationKey'] = this.key();\n            this.currentEntry['entryType'] = d.substring(1);\n            this.match(\",\");\n            this.key_value_list();\n            this.entries.push(this.currentEntry);\n        };\n\n        this.directive = function() {\n            this.match(\"@\");\n            return \"@\" + this.key();\n        };\n\n        this.preamble = function() {\n            this.currentEntry = {};\n            this.currentEntry['entryType'] = 'PREAMBLE';\n            this.currentEntry['entry'] = this.value_comment();\n            this.entries.push(this.currentEntry);\n        };\n\n        this.comment = function() {\n            this.currentEntry = {};\n            this.currentEntry['entryType'] = 'COMMENT';\n            this.currentEntry['entry'] = this.value_comment();\n            this.entries.push(this.currentEntry);\n        };\n\n        this.entry = function(d) {\n            this.entry_body(d);\n        };\n\n        this.bibtex = function() {\n            while (this.matchAt()) {\n                var d = this.directive();\n                this.match(\"{\");\n                if (d == \"@STRING\") {\n                    this.string();\n                } else if (d == \"@PREAMBLE\") {\n                    this.preamble();\n                } else if (d == \"@COMMENT\") {\n                    this.comment();\n                } else {\n                    this.entry(d);\n                }\n                this.match(\"}\");\n            };\n        };\n    };\n    \n    exports.toJSON = function(bibtex) {\n        var b = new BibtexParser();\n        b.setInput(bibtex);\n        b.bibtex();\n        return b.entries;\n    };\n\n    /* added during hackathon don't hate on me */\n    exports.toBibtex = function(json) {\n        var out = '';\n        for ( var i in json) {\n            out += \"@\" + json[i].entryType;\n            out += '{';\n            if (json[i].citationKey)\n                out += json[i].citationKey + ', ';\n            if (json[i].entry)\n                out += json[i].entry ;\n            if (json[i].entryTags) {\n                var tags = '';\n                for (var jdx in json[i].entryTags) {\n                    if (tags.length != 0)\n                        tags += ', ';\n                    tags += jdx + '= {' + json[i].entryTags[jdx] + '}';\n                }\n                out += tags;\n            }\n            out += '}\\n\\n';\n        }\n        return out;\n        \n    };\n\n})(typeof exports === 'undefined' ? this['bibtexParse'] = {} : exports);\n\n/* end bibtexParse */\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","// src/lib/bibtex.ts\n// Use require to avoid ESM/CJS interop issues\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bib = require(\"bibtex-parse-js\");\n\nexport type BibEntry = {\n  id: string;\n  type: string;\n  fields: Record<string, string>;\n  createdAt: string;\n  notes?: { where?: string; text?: string }[];\n};\n\nexport function parseBibtex(raw: string): BibEntry[] {\n  const text = (raw || \"\").trim();\n  if (!text) return [];\n  const parsed = bib.toJSON(text) || [];\n  return parsed.map((it: any) => ({\n    id: it.citationKey || it.entryTags?.citationKey || cryptoId(),\n    type: it.entryType,\n    fields: it.entryTags || {},\n    createdAt: new Date().toISOString(),\n  }));\n}\n\nfunction cryptoId() {\n  return \"id_\" + Math.random().toString(36).slice(2, 9);\n}","/// <reference types=\"office-js\" />\n\nfunction getStore() {\n  const or = (globalThis as any).OfficeRuntime;\n  const storage = or?.storage;\n  if (storage) return storage;\n  // Fallback for normal browsers\n  return {\n    async getItem(k: string) { return localStorage.getItem(k); },\n    async setItem(k: string, v: string) { localStorage.setItem(k, v); },\n    async removeItem(k: string) { localStorage.removeItem(k); },\n  };\n}\n\nconst LIB_KEY = \"wordref.library\";\nconst ORDER_KEY = \"wordref.citedOrder\";\n\nexport async function getLibrary(): Promise<Record<string, any>> {\n  const raw = await getStore().getItem(LIB_KEY);\n  return raw ? JSON.parse(raw) : {};\n}\nexport async function saveLibrary(lib: Record<string, any>) {\n  await getStore().setItem(LIB_KEY, JSON.stringify(lib));\n}\nexport async function upsertEntry(entry: any) {\n  const lib = await getLibrary();\n  lib[entry.id] = { ...(lib[entry.id] || {}), ...entry };\n  await saveLibrary(lib);\n}\nexport async function getCitedOrder(): Promise<string[]> {\n  const raw = await getStore().getItem(ORDER_KEY);\n  return raw ? JSON.parse(raw) : [];\n}\nexport async function setCitedOrder(ids: string[]) {\n  await getStore().setItem(ORDER_KEY, JSON.stringify(ids));\n}\nexport async function markCited(id: string) {\n  const order = await getCitedOrder();\n  if (!order.includes(id)) {\n    order.push(id);\n    await setCitedOrder(order);\n  }\n}\nexport async function clearCitedOrder() {\n  await getStore().removeItem(ORDER_KEY);\n}\nexport async function clearLibrary() {\n  await getStore().removeItem(LIB_KEY);\n}","/// <reference types=\"office-js\" />\nimport type { BibEntry } from \"./bibtex\";\n\n/* ======================= types ======================= */\n\n\n/* ======================= helpers ======================= */\n\nfunction normalizeStyle(style?: string): string {\n  return (style || \"apa\").toLowerCase();\n}\nfunction firstAuthorSurname(e: BibEntry): string {\n  const a = e.fields.author || e.fields.editor || \"Anon\";\n  return a.split(\" and \")[0].split(\",\")[0].trim();\n}\nfunction isNumericStyle(sty: string) {\n  sty = normalizeStyle(sty);\n  return sty === \"ieee\" || sty === \"numeric\" || sty === \"vancouver\" || sty === \"acs\";\n}\n\nasync function ensureSelectionAtEnd(): Promise<void> {\n  await Word.run(async (ctx) => {\n    const end = ctx.document.body.getRange(\"End\");\n    end.select();\n    await ctx.sync();\n  });\n}\n\n/* ================= in-text formatting ================= */\n\nexport function formatInText(e: BibEntry, style: string, index: number): string {\n  const sty = normalizeStyle(style);\n  const author = firstAuthorSurname(e);\n  const year = e.fields.year || \"n.d.\";\n\n  if (isNumericStyle(sty)) return `[${index}]`;\n  // author–year styles\n  return `(${author}, ${year})`;\n}\n\n/* =============== bibliography formatting =============== */\n\nexport function formatBibliographyEntry(e: BibEntry, style: string, index: number): string {\n  const sty = normalizeStyle(style);\n  const a = e.fields.author || e.fields.editor || \"Anon\";\n  const y = e.fields.year || \"n.d.\";\n  const t = e.fields.title || \"\";\n  const j = e.fields.journal || e.fields.booktitle || \"\";\n  const v = e.fields.volume ? `${e.fields.volume}` : \"\";\n  const n = e.fields.number ? `(${e.fields.number})` : \"\";\n  const p = e.fields.pages ? `, ${e.fields.pages}` : \"\";\n  const doi = e.fields.doi ? ` https://doi.org/${e.fields.doi}` : \"\";\n\n  switch (sty) {\n    case \"ieee\":\n    case \"numeric\":\n      return `[${index}] ${a}. “${t},” ${j} ${v}${n}${p}, ${y}.${doi}`;\n    case \"vancouver\":\n      return `${index}. ${a}. ${t}. ${j} ${y}${v ? `;${v}` : \"\"}${n ? `(${n})` : \"\"}${p ? `:${p.replace(\", \", \"-\").replace(/^, /, \"\")}` : \"\"}.`;\n    case \"harvard\":\n      return `${a}, ${y}. ${t}. ${j}${v ? `, ${v}` : \"\"}${n ? ` ${n}` : \"\"}${p}.`;\n    case \"acs\":\n      return `${a}. ${t}. ${j} ${y}${v ? `, ${v}` : \"\"}${n ? ` ${n}` : \"\"}${p}.`;\n    case \"apa\":\n    default:\n      return `${a} (${y}). ${t}. ${j}${v ? `, ${v}` : \"\"}${n ? ` ${n}` : \"\"}${p}.${doi}`;\n  }\n}\n\n/* ============== heading + bibliography block ============== */\n\n// replaces the old ensureReferencesHeading()\nfunction ensureReferencesHeadingInContext(ctx: Word.RequestContext): Promise<Word.Paragraph> {\n  return new Promise(async (resolve) => {\n    const body = ctx.document.body;\n    const paras = body.paragraphs;\n    paras.load(\"items,text\");\n    await ctx.sync();\n\n    let heading = paras.items.find(p => p.text.trim().toLowerCase() === \"references\");\n    if (!heading) {\n      heading = body.insertParagraph(\"References\", Word.InsertLocation.end);\n      heading.styleBuiltIn = Word.BuiltInStyleName.heading1;\n      body.insertParagraph(\"\", Word.InsertLocation.end);\n      await ctx.sync();\n    }\n    resolve(heading!);\n  });\n}\n\n/**\n * Build/replace the bibliography *per entry paragraph*, each wrapped in its own CC:\n *  - Deletes any old WordRef bibliography CCs (legacy block + per-entry) to avoid duplicates.\n *  - Inserts new entries directly after the \"References\" heading.\n *  - Applies best-effort formatting (font, size, alignment, line spacing).\n */\n// cite.ts\nexport type BibFormatOptions = {\n  fontName?: string;\n  fontSize?: number;      // pt\n  lineSpacing?: number;   // pt (best-effort)\n  alignment?: Word.Alignment; // \"Left\" | \"Right\" | \"Centered\" | \"Justified\"\n  color?: string;         // CSS color name or hex like \"#333333\"\n};\n\n// Helper: create/find the single bibliography CC after the “References” heading\nasync function getOrCreateBibCC(ctx: Word.RequestContext, heading: Word.Paragraph): Promise<Word.ContentControl> {\n  const existing = ctx.document.contentControls.getByTag(\"wordref-bibliography\");\n  existing.load(\"items\");\n  await ctx.sync();\n\n  if (existing.items.length > 0) return existing.items[0];\n\n  const afterHeading = heading.getRange(\"End\");\n  const p = afterHeading.insertParagraph(\"\", Word.InsertLocation.after);\n  const cc = p.insertContentControl();\n  cc.tag = \"wordref-bibliography\";\n  cc.title = \"WordRef Bibliography\";\n  return cc;\n}\n\nexport async function updateBibliography(\n  entries: BibEntry[],\n  style: string = \"apa\",\n  opts?: BibFormatOptions\n): Promise<void> {\n  // de-dup + sort for author-year styles\n  const seen = new Set<string>();\n  let list = entries.filter(e => !seen.has(e.id) && (seen.add(e.id), true));\n  if ([\"apa\", \"harvard\", \"mla\"].includes((style || \"apa\").toLowerCase())) {\n    list = [...list].sort((a, b) => (a.fields.author || \"\").localeCompare(b.fields.author || \"\"));\n  }\n\n  await Word.run(async (ctx) => {\n    // ensure heading, then one CC\n    const heading = await (async () => {\n      const body = ctx.document.body;\n      const paras = body.paragraphs;\n      paras.load(\"items,text\");\n      await ctx.sync();\n      let h = paras.items.find(p => p.text.trim().toLowerCase() === \"references\");\n      if (!h) {\n        h = body.insertParagraph(\"References\", Word.InsertLocation.end);\n        h.styleBuiltIn = Word.BuiltInStyleName.heading1;\n        body.insertParagraph(\"\", Word.InsertLocation.end);\n        await ctx.sync();\n      }\n      return h!;\n    })();\n\n    const bibCC = await getOrCreateBibCC(ctx, heading);\n\n    // Build full text once\n    const lines = list.map((e, i) => formatBibliographyEntry(e, style, i + 1));\n    const bibText = lines.join(\"\\n\");\n\n    // Replace the whole CC with fresh text (one write)\n    bibCC.insertText(bibText, Word.InsertLocation.replace);\n    await ctx.sync();\n\n    // Apply formatting to paragraphs inside the CC\n    try {\n      const rng = bibCC.getRange();\n      const paras = rng.paragraphs;\n      paras.load(\"items/font\");\n      await ctx.sync();\n\n      for (const p of paras.items) {\n        if (opts?.fontName) p.font.name = opts.fontName;\n        if (opts?.fontSize) p.font.size = opts.fontSize;\n        if (opts?.color)    p.font.color = opts.color;        // NEW: color\n        if (opts?.alignment) (p as any).alignment = opts.alignment;\n        if (opts?.lineSpacing) (p as any).lineSpacing = opts.lineSpacing; // best-effort\n      }\n    } catch {\n      // ignore if host doesn’t expose these setters\n    }\n\n    await ctx.sync();\n  });\n}\n\n/* =================== scan & re-render =================== */\n\n/** Return cited IDs in reading order based on content controls tagged \"wordref-cite:<id>\" */\nexport async function scanCitationsInDoc(): Promise<string[]> {\n  return await Word.run(async (ctx) => {\n    const controls = ctx.document.contentControls;\n    controls.load(\"items/tag\");\n    await ctx.sync();\n\n    const ids: string[] = [];\n    for (const cc of controls.items) {\n      const tag = (cc.tag || \"\");\n      if (tag.startsWith(\"wordref-cite:\")) {\n        const id = tag.split(\":\")[1];\n        if (id) ids.push(id);\n      }\n    }\n    return ids;\n  });\n}\n\nexport async function rerenderAllCitations(style: string, order: string[], lib: Record<string, BibEntry>) {\n  await Word.run(async (ctx) => {\n    const controls = ctx.document.contentControls;\n    controls.load(\"items/tag\");\n    await ctx.sync();\n\n    const items = controls.items.filter(cc => (cc.tag || \"\").startsWith(\"wordref-cite:\"));\n    for (const cc of items) {\n      const id = (cc.tag || \"\").split(\":\")[1];\n      const e = lib[id];\n      if (!e) continue;\n\n      const idx = Math.max(0, order.indexOf(id)) + 1;\n      const newText = formatInText(e, style, idx);\n      cc.insertText(newText, Word.InsertLocation.replace);\n    }\n    await ctx.sync();\n  });\n}\n\n/* ================== grouping for numeric ================== */\n\nfunction parseBracketIndices(text: string): number[] {\n  // Accept \"[2]\", \"[2, 3-5]\" / \"[2][3]\" → we’ll normalize later\n  const inside = text.match(/\\[(.*?)\\]/g);\n  const bag: number[] = [];\n  if (!inside) return bag;\n  for (const block of inside) {\n    const s = block.replace(/^\\[|\\]$/g, \"\");\n    for (const part of s.split(\",\").map(t => t.trim()).filter(Boolean)) {\n      if (/^\\d+$/.test(part)) {\n        bag.push(parseInt(part, 10));\n      } else if (/^\\d+\\s*-\\s*\\d+$/.test(part)) {\n        const [a, b] = part.split(\"-\").map(x => parseInt(x.trim(), 10));\n        for (let i = Math.min(a, b); i <= Math.max(a, b); i++) bag.push(i);\n      }\n    }\n  }\n  return bag;\n}\n\nfunction formatCitationGroup(indices: number[]): string {\n  const arr = Array.from(new Set(indices)).sort((a, b) => a - b);\n  if (!arr.length) return \"[]\";\n  const out: string[] = [];\n  let start = arr[0], prev = arr[0];\n\n  for (let i = 1; i <= arr.length; i++) {\n    const cur = arr[i];\n    if (cur === prev + 1) { prev = cur; continue; }\n    if (start === prev) out.push(`${start}`);\n    else if (prev === start + 1) out.push(`${start}`, `${prev}`);\n    else out.push(`${start}-${prev}`);\n    start = cur ?? NaN;\n    prev = cur ?? NaN;\n  }\n  return `[${out.join(\", \")}]`;\n}\n\nexport async function mergeAdjacentCitationsInParagraph() {\n  await Word.run(async (ctx) => {\n    const sel = ctx.document.getSelection();\n    const para = sel.paragraphs.getFirst();\n    para.load(\"contentControls/items/tag\");\n    await ctx.sync();\n\n    // Collect contiguous runs of our cite CCs\n    const items = para.contentControls.items;\n    let i = 0;\n    while (i < items.length) {\n      // start a group if this is a wordref-cite\n      const group: Word.ContentControl[] = [];\n      while (i < items.length && (items[i].tag || \"\").startsWith(\"wordref-cite:\")) {\n        group.push(items[i]);\n        i++;\n      }\n\n      if (group.length > 1) {\n        // Load text of all CCs in the group\n        group.forEach(cc => cc.getRange().load(\"text\"));\n        await ctx.sync();\n\n        // Parse/merge numbers from each CC\n        const allNums: number[] = [];\n        for (const cc of group) {\n          const txt = cc.getRange().text || \"\";\n          allNums.push(...parseBracketIndices(txt));\n        }\n        const merged = formatCitationGroup(allNums);\n\n        // Replace text in the FIRST CC, delete the rest\n        group[0].insertText(merged, Word.InsertLocation.replace);\n        for (let k = 1; k < group.length; k++) {\n          // delete control + its contents so duplicates don’t remain\n          group[k].delete(false);\n        }\n        await ctx.sync();\n      }\n\n      // Skip non-citation CC or advance\n      while (i < items.length && !(items[i].tag || \"\").startsWith(\"wordref-cite:\")) {\n        i++;\n      }\n    }\n  });\n}\n/* ============== insert citation (with merge) ============== */\n\n/**\n * Insert citation at selection. For numeric styles, if the user inserts\n * *inside* an existing WordRef citation CC, we merge indices into one bracket\n * e.g. `[2]` + `[3,4]` → `[2, 3–4]`. For author–year styles we just replace text.\n */\n// cite.ts\n// cite.ts (replace the whole function)\nexport async function insertCitationControl(\n  e: BibEntry,\n  text: string,\n  style?: string,\n  index?: number\n) {\n  const sty = (style || \"apa\").toLowerCase();\n  const isNumeric = [\"ieee\", \"numeric\", \"vancouver\", \"acs\"].includes(sty);\n\n  const dbg = (window as any).__WORDREF_DEBUG__ || {};\n  const FORCE_APPEND_END   = !!dbg.FORCE_APPEND_END;\n  const NO_CC_FALLBACK     = dbg.NO_CONTENT_CONTROL_FALLBACK !== false;\n  const SAFE_MODE_NO_MERGE = !!dbg.SAFE_MODE_NO_MERGE;\n\n  const setSelectedTextAsync = (t: string) =>\n    new Promise<boolean>((resolve) => {\n      Office.context.document.setSelectedDataAsync(\n        t,\n        { coercionType: Office.CoercionType.Text },\n        (res) => resolve(res.status === Office.AsyncResultStatus.Succeeded)\n      );\n    });\n\n  return Word.run(async (ctx) => {\n    const body = ctx.document.body;\n\n    if (FORCE_APPEND_END) {\n      const p = body.insertParagraph(\"\", Word.InsertLocation.end);\n      const r = p.getRange(\"Start\");\n      r.insertText(text, Word.InsertLocation.replace);\n      await ctx.sync();\n      return;\n    }\n\n    const sel = ctx.document.getSelection();\n    sel.load(\"text,parentContentControl,paragraphs\");\n    await ctx.sync();\n\n    // 1) INSIDE a WordRef cite → merge\n    if (!SAFE_MODE_NO_MERGE) {\n      const parent = sel.parentContentControl;\n      if (\n        parent && !parent.isNullObject &&\n        (parent.tag || \"\").startsWith(\"wordref-cite:\") &&\n        isNumeric && typeof index === \"number\"\n      ) {\n        const r = parent.getRange();\n        r.load(\"text\");\n        await ctx.sync();\n        const nums = parseBracketIndices(r.text);\n        nums.push(index);\n        parent.insertText(formatCitationGroup(nums), Word.InsertLocation.replace);\n        await ctx.sync();\n        return;\n      }\n    }\n\n    // 2) JUST AFTER a WordRef cite in same paragraph → snap back and merge\n    if (!SAFE_MODE_NO_MERGE && isNumeric && typeof index === \"number\") {\n      try {\n        const para = sel.paragraphs.getFirst();\n        para.load(\"text\");\n        await ctx.sync();\n\n        // find last WordRef cite CC whose end touches selection\n        const candidate = await (async () => {\n          const all = ctx.document.contentControls;\n          all.load(\"items/tag\");\n          await ctx.sync();\n          const items = all.items.filter(cc => (cc.tag || \"\").startsWith(\"wordref-cite:\"));\n          for (const cc of items) {\n            const rr = cc.getRange();\n            rr.load(\"text\");\n            await ctx.sync();\n            // compare end-of-CC to selection start\n            const end = rr.getRange(\"End\");\n            const cmp = end.compareLocationWith(sel);\n            // cmp === \"Equal\" means selection is at the same point; \"After\" means caret is after end\n            if (cmp.value === \"Equal\") return cc;\n          }\n          return null;\n        })();\n\n        if (candidate) {\n          const r = candidate.getRange();\n          r.load(\"text\");\n          await ctx.sync();\n          const nums = parseBracketIndices(r.text);\n          nums.push(index);\n          candidate.insertText(formatCitationGroup(nums), Word.InsertLocation.replace);\n          await ctx.sync();\n          return;\n        }\n      } catch {\n        // ignore, fall through\n      }\n    }\n\n    // helper to try CC, then plain text fallback\n    const tryCreateCC = async (range: Word.Range) => {\n      try {\n        const cc = range.insertContentControl();\n        cc.tag = `wordref-cite:${e.id}`;\n        cc.title = \"WordRef Citation\";\n        cc.appearance = \"BoundingBox\";\n        cc.insertText(text, Word.InsertLocation.replace);\n        await ctx.sync();\n        return true;\n      } catch {\n        if (NO_CC_FALLBACK) {\n          const ok = await setSelectedTextAsync(text);\n          if (ok) return true;\n        }\n        return false;\n      }\n    };\n\n    // 3) Try at selection\n    if (await tryCreateCC(sel)) return;\n\n    // 4) If inside a foreign CC, insert after paragraph\n    try {\n      const parent = sel.parentContentControl;\n      if (parent && !parent.isNullObject && !(parent.tag || \"\").startsWith(\"wordref-cite:\")) {\n        const para = sel.paragraphs.getFirst();\n        const afterPara = para.getRange(\"End\").insertParagraph(\"\", Word.InsertLocation.after);\n        const r = afterPara.getRange(\"Start\");\n        if (await tryCreateCC(r)) return;\n      }\n    } catch { /* ignore */ }\n\n    // 5) Common API try again\n    if (await setSelectedTextAsync(text)) return;\n\n    // 6) Append at doc end\n    const p = body.insertParagraph(\"\", Word.InsertLocation.end);\n    const r = p.getRange(\"Start\");\n    if (!(await tryCreateCC(r))) {\n      r.insertText(text, Word.InsertLocation.replace);\n      await ctx.sync();\n    }\n  });\n}","/// <reference types=\"office-js\" />\n\nimport * as Bib from \"../lib/bibtex\";\n\n(window as any).__WORDREF_DEBUG__ = {\n  NO_CONTENT_CONTROL_FALLBACK: true,   // allow fallback to plain text if CC insert fails\n  FORCE_APPEND_END: false,             // if true, always append at end of doc\n  SAFE_MODE_NO_MERGE: false            // if true, disables numeric merge logic\n};\n\n// Storage helpers\nimport {\n  getLibrary,\n  upsertEntry,\n  getCitedOrder,\n  setCitedOrder,\n  markCited,\n  clearCitedOrder,\n  clearLibrary,\n} from \"../lib/storage\";\n\n// Cite helpers\nimport type { BibFormatOptions } from \"../lib/cite\";\nimport * as Cite from \"../lib/cite\";\n\nconst DEBUG_SIMPLE_INSERT = true;\nconst {\n  formatInText,\n  insertCitationControl,  // must exist in cite.ts\n  updateBibliography,\n  scanCitationsInDoc,\n  rerenderAllCitations,\n} = Cite;\n\n\nfunction normalizeAlignment(v: string): Word.Alignment {\n  switch ((v || \"\").toLowerCase()) {\n    case \"center\":\n    case \"centered\":\n      return Word.Alignment.centered;\n    case \"right\":\n      return Word.Alignment.right;\n    case \"justify\":\n    case \"justified\":\n      return Word.Alignment.justified;\n    case \"left\":\n    default:\n      return Word.Alignment.left;\n  }\n}\nfunction getBibFormatOpts(): BibFormatOptions {\n  const fontName    = (document.getElementById(\"bibFont\") as HTMLSelectElement)?.value || \"Times New Roman\";\n  const fontSize    = parseInt((document.getElementById(\"bibSize\") as HTMLInputElement)?.value || \"12\", 10);\n  const lineSpacing = parseInt((document.getElementById(\"bibSpacing\") as HTMLInputElement)?.value || \"14\", 10);\n  const alignRaw    = (document.getElementById(\"bibAlign\") as HTMLSelectElement)?.value || \"Left\";\n  const color       = (document.getElementById(\"bibColor\") as HTMLInputElement)?.value || \"#333333\";\n  const alignment   = normalizeAlignment(alignRaw);\n  return { fontName, fontSize, lineSpacing, alignment, color };\n}\n\n\n\ntype BibEntry = Bib.BibEntry;\n\nconst $ = <T extends HTMLElement = HTMLElement>(id: string) =>\n  document.getElementById(id) as T | null;\n\nconst getStyle = () =>\n  (($(\"styleSelect\") as HTMLSelectElement | null)?.value || \"apa\").toLowerCase();\n\n/* ───────────────────────── UI init ───────────────────────── */\n\nOffice.onReady(async () => {\n\n  // best: typed\n  \n  ///try {\n    ///OfficeExtension.config.extendedErrorLogging = true;\n  ///} catch (err) {\n    ///console.warn(\"Could not enable extended error logging\", err);\n  ///}\n\n  // Buttons\n  $(\"btnAddOnly\")?.addEventListener(\"click\", onAddOnly);\n  $(\"btnAddCite\")?.addEventListener(\"click\", onAddAndCite);\n  $(\"btnInsertCite\")?.addEventListener(\"click\", onInsertOnly);\n  $(\"btnUpdateBib\")?.addEventListener(\"click\", onUpdateBib);\n  $(\"btnResetNumbering\")?.addEventListener(\"click\", onResetNumbering);\n  $(\"btnClearLibrary\")?.addEventListener(\"click\", onClearLibraryClick);\n  $(\"btnReload\")?.addEventListener(\"click\", () => location.reload());\n\n  document.getElementById(\"helpIcon\")?.addEventListener(\"click\", () => {\n    document.getElementById(\"instructionsModal\")?.classList.add(\"show\");\n  });\n  document.getElementById(\"closeInstructions\")?.addEventListener(\"click\", () => {\n    document.getElementById(\"instructionsModal\")?.classList.remove(\"show\");\n  });\n\n  // 🎨 Font color preview update\n  const fontColorInput = document.getElementById(\"bibColor\") as HTMLInputElement;\n  fontColorInput?.addEventListener(\"input\", () => {\n    fontColorInput.style.backgroundColor = fontColorInput.value;\n  });\n\n  // Initial render\n  await refreshResults(\"\");\n\n  // Search\n  const search = $(\"search\") as HTMLInputElement | null;\n  search?.addEventListener(\"input\", async () => {\n    const q = search.value;\n\n    // If the search looks like raw BibTeX, try to find a direct match and pop/highlight it\n    if (isLikelyBibtex(q)) {\n      const match = await findExistingFromBibtex(q);\n      await refreshResults(\"\"); // show full list so we can highlight\n      if (match?.id) {\n        const container = document.getElementById(\"results\")!;\n        flashResultRow(container, match.id);\n        const reasonMsg = match.reason === \"citationKey\" ? \"citation key\" : match.reason.toUpperCase();\n        showToast(`Already in your library (matched by ${reasonMsg}).`);\n        return; // don't filter this time (we already highlighted the match)\n      }\n      // otherwise fall through to normal filtering\n    }\n\n    await refreshResults(q);\n  });\n\n  // Style badge + style change handling\n  updateStyleBadge();\n  (document.getElementById(\"styleSelect\") as HTMLSelectElement | null)\n    ?.addEventListener(\"change\", onStyleChanged);\n\n  // Initial render\n  await refreshResults(\"\");\n});\n//const DEBUG_SIMPLE_INSERT = false; // set to true if you want to force the simple path\n\nasync function simpleInsert(e: BibEntry, style: string) {\n  // compute numeric index from first-cited order\n  let order = await getCitedOrder();\n  let pos = order.indexOf(e.id);\n  if (pos === -1) {\n    await markCited(e.id);\n    order = await getCitedOrder();\n    pos = order.indexOf(e.id);\n  }\n  const idx = pos >= 0 ? pos + 1 : 1;\n  const text = formatInText(e, style, idx);\n\n  await Word.run(async (ctx) => {\n    const body = ctx.document.body;\n\n    // Helper: make sure we have a writable selection. If not, select end-of-doc.\n    const ensureSelection = async (): Promise<Word.Range> => {\n      try {\n        const sel = ctx.document.getSelection();\n        sel.load(\"text\");\n        await ctx.sync();\n        return sel;\n      } catch {\n        const end = body.getRange(\"End\");\n        end.select();\n        await ctx.sync();\n        const sel2 = ctx.document.getSelection();\n        return sel2;\n      }\n    };\n\n    let sel: Word.Range;\n    try {\n      sel = await ensureSelection();\n      // Try inserting a content control at the (recovered) selection\n      const cc = sel.insertContentControl();\n      cc.tag = `wordref-cite:${e.id}`;\n      cc.title = \"WordRef Citation\";\n      cc.appearance = \"BoundingBox\";\n      cc.insertText(text, Word.InsertLocation.replace);\n      await ctx.sync();\n      return;\n    } catch (err) {\n      console.warn(\"[WordRef] selection CC insert failed; will append at end\", err);\n    }\n\n    // Final fallback: append to end\n    const p = body.insertParagraph(\"\", Word.InsertLocation.end);\n    const r = p.getRange(\"Start\");\n    const cc = r.insertContentControl();\n    cc.tag = `wordref-cite:${e.id}`;\n    cc.title = \"WordRef Citation\";\n    cc.appearance = \"BoundingBox\";\n    cc.insertText(text, Word.InsertLocation.replace);\n    await ctx.sync();\n  });\n}\nasync function insertOrAppendCitationShim(e: BibEntry, style: string, lib: Record<string, BibEntry>) {\n  try {\n    const order = await getCitedOrder();\n    let idx = order.indexOf(e.id);\n    if (idx === -1) {\n      // ensure it's marked cited\n      await markCited(e.id);\n      const refreshed = await getCitedOrder();\n      idx = refreshed.indexOf(e.id);\n    }\n    const citeIndex = idx >= 0 ? idx + 1 : 1;\n\n    const text = formatInText(e, style, citeIndex);\n    console.log(\"Inserting citation:\", { id: e.id, style, citeIndex, text });\n\n    await insertCitationControl(e, text, style, citeIndex);\n  } catch (err) {\n    console.error(\"insertOrAppendCitationShim failed\", err);\n    throw err; // let caller showToast\n  }\n}\n/* ───────────────────── Style badge ───────────────────── */\n\nfunction updateStyleBadge() {\n  const badge = document.getElementById(\"styleBadge\");\n  if (!badge) return;\n  const v = getStyle();\n  const label =\n    ({\n      ieee: \"IEEE (numeric)\",\n      numeric: \"Numeric\",\n      apa: \"APA\",\n      mla: \"MLA\",\n      harvard: \"Harvard\",\n      acs: \"ACS\",\n      vancouver: \"Vancouver\",\n    } as Record<string, string>)[v] || v.toUpperCase();\n  badge.textContent = label;\n}\n\n/* ───────────── first-cited index helpers (1-based) ───────────── */\n\nasync function ensureCitedIndex(id: string): Promise<number> {\n  let order = await getCitedOrder();\n  let pos = order.indexOf(id);\n  if (pos === -1) {\n    await markCited(id);\n    order = await getCitedOrder();\n    pos = order.indexOf(id);\n  }\n  return pos + 1;\n}\n\n\n/* ───────────────────── Button handlers ───────────────────── */\n\nasync function onAddOnly() {\n  const bibbox = $(\"bibtexInput\") as HTMLTextAreaElement | null;\n  if (!bibbox) return;\n\n  const raw = bibbox.value.trim();\n  if (!raw) return;\n\n  let entries: BibEntry[] = [];\n  try {\n    entries = Bib.parseBibtex(raw);\n  } catch {\n    showToast(\"Could not parse the BibTeX you pasted.\");\n    return;\n  }\n\n  const lib = await getLibrary();\n\n  for (const e of entries) {\n    if (lib[e.id]) {\n      // Duplicate detected → highlight + toast\n      await refreshResults(\"\");\n      const container = document.getElementById(\"results\")!;\n      flashResultRow(container, e.id);\n      showToast(`Already in your library (key: ${e.id}).`);\n      continue; // skip inserting duplicate\n    }\n\n    // Save notes when using Add (was missing)\n    const where = ($(\"notePage\") as HTMLInputElement | null)?.value.trim() || \"\";\n    const note  = ($(\"noteText\") as HTMLInputElement | null)?.value.trim() || \"\";\n    if (where || note) (e as BibEntry).notes = [{ where, text: note }];\n\n    await upsertEntry(e);\n  }\n\n  bibbox.value = \"\";\n  await refreshResults(\"\");\n}\n\nasync function onAddAndCite() {\n  const bibbox = $(\"bibtexInput\") as HTMLTextAreaElement | null;\n  if (!bibbox) return;\n\n  const raw = bibbox.value.trim();\n  if (!raw) return;\n\n  const where = ($(\"notePage\") as HTMLInputElement | null)?.value.trim() || \"\";\n  const note  = ($(\"noteText\") as HTMLInputElement | null)?.value.trim() || \"\";\n  const style = getStyle();\n\n  let entries: BibEntry[] = [];\n  try {\n    entries = Bib.parseBibtex(raw);\n  } catch {\n    showToast(\"Could not parse the BibTeX you pasted.\");\n    return;\n  }\n\n  let lib = await getLibrary();\n\n  for (const e of entries) {\n    if (lib[e.id]) {\n      await refreshResults(\"\");\n      const container = document.getElementById(\"results\")!;\n      flashResultRow(container, e.id);\n      showToast(`Already cited/added (${e.id}).`);\n      continue;\n    }\n\n    if (where || note) (e as BibEntry).notes = [{ where, text: note }];\n    await upsertEntry(e);\n    lib[e.id] = e; // update cache\n\n    // Ensure this ID is in first-cited order\n    // Ensure this ID is in first-cited order and compute text\n    const idx = await ensureCitedIndex(e.id);\n    const citeText = formatInText(e, style, idx);\n\n    // Insert (robust)\n    if (DEBUG_SIMPLE_INSERT) {\n      await simpleInsert(e, style);\n      await refreshBibliographyNow(style);\n\n    } else {\n      await insertCitationControl(e, citeText, style, idx);\n      await refreshBibliographyNow(style);\n\n      if ([\"ieee\",\"numeric\",\"vancouver\",\"acs\"].includes(getStyle())) {\n        try { await Cite.mergeAdjacentCitationsInParagraph(); } catch {}\n      }\n    }\n  }\n\n  // Clear inputs\n  bibbox.value = \"\";\n  const np = $(\"notePage\") as HTMLInputElement | null; if (np) np.value = \"\";\n  const nt = $(\"noteText\") as HTMLInputElement | null; if (nt) nt.value = \"\";\n\n  await refreshResults(\"\");\n}\n\nasync function onInsertOnly() {\n  const lib = await getLibrary();\n  const list = Object.values(lib) as BibEntry[];\n  if (list.length === 0) return;\n\n  const e = list[0];\n  const style = getStyle();\n\n  try {\n    const idx = await ensureCitedIndex(e.id);\n    const citeText = formatInText(e, style, idx);\n\n    if (DEBUG_SIMPLE_INSERT) {\n      await simpleInsert(e, style);\n      await refreshBibliographyNow(style);\n\n    } else {\n      await insertCitationControl(e, citeText, style, idx);\n      await refreshBibliographyNow(style);\n\n      if ([\"ieee\",\"numeric\",\"vancouver\",\"acs\"].includes(getStyle())) {\n        try { await Cite.mergeAdjacentCitationsInParagraph(); } catch {}\n      }\n    }\n  } catch (err: any) {\n    console.error(\"Insert citation error:\", err);\n    const info = err?.debugInfo ? JSON.stringify(err.debugInfo) : String(err);\n    showToast(\"Insert citation failed: \" + info);\n  }\n}\n\n\n\n\nasync function onResetNumbering() {\n  if (!(await askConfirm(\"Reset numbering? This keeps your library but re-numbers citations from [1].\"))) return;\n  await clearCitedOrder();\n  const style = getStyle();\n  const lib = await getLibrary();\n  await Cite.rerenderAllCitations(style, [], lib);\n  await Cite.updateBibliography([], style);\n  showToast(\"Numbering reset.\");\n}\n\nasync function onClearLibraryClick() {\n  if (!(await askConfirm(\"Clear ENTIRE library and numbering? This cannot be undone.\"))) return;\n  await clearLibrary();\n  await clearCitedOrder();\n  await refreshResults(\"\");\n  try {\n    await updateBibliography([], getStyle());\n  } catch (err) {\n    // ignore\n  }\n  showToast(\"Library cleared.\");\n}\n// taskpane.ts\nasync function refreshBibliographyNow(style: string) {\n  const lib = await getLibrary();\n  const ids = await scanCitationsInDoc();\n  const seen = new Set<string>();\n  const cited = ids\n    .filter(id => (lib as any)[id] && !seen.has(id) && (seen.add(id), true))\n    .map(id => (lib as any)[id]);\n\n  await updateBibliography(cited, style, getBibFormatOpts());\n}\n/* ───────────────────── Results list + search ───────────────────── */\n\nasync function refreshResults(query: string) {\n  const lib = await getLibrary();\n  const all = Object.values(lib) as BibEntry[];\n\n  const q = norm(query || \"\");\n  const filtered = q\n    ? all.filter((e) => {\n        const blob = [\n          e.id,\n          e.fields.title,\n          e.fields.author,\n          e.fields.year,\n          e.fields.journal,\n          e.fields.booktitle,\n          e.fields.doi,\n          ...(e.notes?.map((n) => `${n.where || \"\"} ${n.text || \"\"}`) || []),\n        ]\n          .join(\" \")\n          .toLowerCase();\n        return blob.includes(q);\n      })\n    : all;\n\n  const container = $(\"results\");\n  if (!container) return;\n\n  const markify = (s: string) => (q ? highlightText(s, query) : s);\n\n  container.innerHTML = filtered\n    .map((e) => {\n      const title = markify(e.fields.title || e.id);\n      const meta = markify(`${e.fields.author || \"Anon\"} — ${e.fields.year || \"n.d.\"}`);\n      const notes =\n        e.notes\n          ?.map(\n            (n) => `<div class=\"note\">${markify(`🔖 ${n.where || \"\"} ${n.text || \"\"}`)}</div>`\n          )\n          .join(\"\") || \"\";\n\n      return `\n        <div class=\"row item\" data-id=\"${e.id}\">\n          <div class=\"grow\">\n            <div class=\"title\">${title}</div>\n            <div class=\"meta\">${meta}</div>\n            ${notes}\n          </div>\n          <button class=\"cite-btn\" data-id=\"${e.id}\">Cite</button>\n        </div>\n      `;\n    })\n    .join(\"\");\n\n  // Per-row Cite buttons\n  // Per-row Cite buttons\n  // Per-row Cite buttons\ncontainer.querySelectorAll<HTMLButtonElement>(\"button.cite-btn\").forEach((btn) => {\n  btn.addEventListener(\"click\", async () => {\n    const id = btn.getAttribute(\"data-id\");\n    if (!id) return;\n\n    const lib = await getLibrary();\n    const e = (lib as any)[id] as BibEntry | undefined;\n    if (!e) return;\n\n    const style = getStyle();\n    const idx = await ensureCitedIndex(e.id);\n    const citeText = formatInText(e, style, idx);\n\n    try {\n      if (DEBUG_SIMPLE_INSERT) {\n        await simpleInsert(e, style);\n      } else {\n        await insertCitationControl(e, citeText, style, idx);\n      }\n    } catch (err: any) {\n      console.error(\"Insert citation error:\", err, err?.debugInfo);\n      const info = err?.debugInfo ? JSON.stringify(err.debugInfo) : String(err);\n      showToast(\"Insert citation failed: \" + info);\n    }\n  });\n});\n}\n\n/* ─────────── search helpers + feedback (toast, flash) ─────────── */\n\nfunction norm(s: string) {\n  return (s || \"\").toLowerCase().replace(/\\s+/g, \" \").trim();\n}\nfunction normTitle(s: string) {\n  return norm(s).replace(/[^a-z0-9 ]/g, \"\");\n}\nfunction isLikelyBibtex(s: string) {\n  return /@\\w+\\s*\\{[\\s\\S]*\\}/.test(s);\n}\n\ntype BibMatch = {\n  id?: string;\n  reason: \"citationKey\" | \"doi\" | \"title\";\n};\n\nasync function findExistingFromBibtex(raw: string): Promise<BibMatch | null> {\n  const lib = await getLibrary();\n  const all = Object.values(lib) as BibEntry[];\n  let parsed: BibEntry[];\n  try {\n    parsed = Bib.parseBibtex(raw);\n  } catch {\n    return null;\n  }\n  if (!parsed.length) return null;\n  const needle = parsed[0];\n\n  // 1) citationKey/id\n  const nid = (needle.id || \"\").trim();\n  if (nid) {\n    const hit = all.find((e) => e.id === nid);\n    if (hit) return { id: hit.id, reason: \"citationKey\" };\n  }\n\n  // 2) DOI\n  const nd = norm(needle.fields.doi || \"\");\n  if (nd) {\n    const hit = all.find((e) => norm(e.fields.doi || \"\") === nd);\n    if (hit) return { id: hit.id, reason: \"doi\" };\n  }\n\n  // 3) normalized title\n  const nt = normTitle(needle.fields.title || \"\");\n  if (nt) {\n    const hit = all.find((e) => normTitle(e.fields.title || \"\") === nt);\n    if (hit) return { id: hit.id, reason: \"title\" };\n  }\n\n  return null;\n}\n\nfunction showToast(msg: string) {\n  const t = document.getElementById(\"toast\");\n  if (!t) return;\n  t.textContent = msg;\n  t.classList.add(\"show\");\n  setTimeout(() => t.classList.remove(\"show\"), 1800);\n}\n\nfunction highlightText(haystackHtml: string, query: string) {\n  const q = query.trim();\n  if (!q) return haystackHtml;\n  const tokens = q\n    .split(/\\s+/)\n    .filter(Boolean)\n    .map((tok) => tok.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"));\n  if (!tokens.length) return haystackHtml;\n  const rx = new RegExp(`(${tokens.join(\"|\")})`, \"gi\");\n  return haystackHtml.replace(rx, \"<mark>$1</mark>\");\n}\n\nfunction flashResultRow(container: HTMLElement, id: string) {\n  const row = container.querySelector<HTMLElement>(`.item[data-id=\"${CSS.escape(id)}\"]`);\n  if (!row) return;\n  row.classList.add(\"hit-highlight\");\n  row.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n  setTimeout(() => row.classList.remove(\"hit-highlight\"), 1200);\n}\n\n/* ─────────────── askConfirm (taskpane UI, no alerts) ─────────────── */\n\nfunction askConfirm(message: string): Promise<boolean> {\n  return new Promise((resolve) => {\n    const bar = document.getElementById(\"confirmBar\")!;\n    const msg = document.getElementById(\"confirmMsg\")!;\n    const yes = document.getElementById(\"confirmYes\")!;\n    const no = document.getElementById(\"confirmNo\")!;\n    msg.textContent = message;\n    bar.style.display = \"flex\";\n    const cleanup = () => {\n      bar.style.display = \"none\";\n      yes.removeEventListener(\"click\", onYes);\n      no.removeEventListener(\"click\", onNo);\n    };\n    const onYes = () => { cleanup(); resolve(true); };\n    const onNo  = () => { cleanup(); resolve(false); };\n    yes.addEventListener(\"click\", onYes);\n    no.addEventListener(\"click\", onNo);\n  });\n}\n\n\n\nasync function onUpdateBib() {\n  const style = getStyle();\n  const lib = await getLibrary();\n\n  const currentIds = await scanCitationsInDoc();\n  await setCitedOrder(currentIds);\n\n  const seen = new Set<string>();\n  const cited = currentIds.filter(id => (lib as any)[id] && !seen.has(id) && (seen.add(id), true))\n                          .map(id => (lib as any)[id]);\n\n  try {\n    await updateBibliography(cited, style, getBibFormatOpts());\n  } catch (err: any) {\n    console.error(\"updateBibliography failed\", err);\n    const info = (err && err.debugInfo) ? JSON.stringify(err.debugInfo) : String(err);\n    showToast(\"Update bibliography failed. \" + info);\n  }\n}\n\nasync function onStyleChanged() {\n  updateStyleBadge();\n\n  const style = getStyle();\n  const lib = await getLibrary();\n  const currentIds = await scanCitationsInDoc();\n  await setCitedOrder(currentIds);\n\n  await rerenderAllCitations(style, currentIds, lib);\n\n  const seen = new Set<string>();\n  const cited = currentIds.filter(id => (lib as any)[id] && !seen.has(id) && (seen.add(id), true))\n                          .map(id => (lib as any)[id]);\n\n  try {\n    await updateBibliography(cited, style, getBibFormatOpts());\n  } catch (err: any) {\n    console.error(\"updateBibliography failed\", err);\n    const info = (err && err.debugInfo) ? JSON.stringify(err.debugInfo) : String(err);\n    showToast(\"Update bibliography failed. \" + info);\n  }\n}","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \"<!doctype html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"utf-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"/> <title>WordRef</title> <link rel=\\\"stylesheet\\\" href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"/> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> </head> <body> <div class=\\\"app-header\\\"> <h2 class=\\\"app-title\\\">WordRef</h2> <div class=\\\"help-wrap\\\"> <button id=\\\"helpIcon\\\" class=\\\"help-icon\\\" title=\\\"Instructions\\\">i</button> <span id=\\\"helpText\\\" class=\\\"help-text\\\">Instructions</span> </div> </div> <div id=\\\"instructionsModal\\\" class=\\\"backdrop\\\" role=\\\"dialog\\\" aria-modal=\\\"true\\\" aria-labelledby=\\\"instTitle\\\"> <div class=\\\"modal\\\"> <div class=\\\"modal-header\\\"> <div id=\\\"instTitle\\\" class=\\\"modal-title\\\">How to use WordRef</div> <button id=\\\"closeInstructions\\\" class=\\\"modal-close\\\" aria-label=\\\"Close\\\">&times;</button> </div> <div class=\\\"modal-body\\\"> <ol> <li>Search your paper on <strong>Google Scholar</strong>.</li> <li>Click <em>Cite</em>, then choose <em>BibTeX</em>.</li> <li>Copy the BibTeX entry and paste it into the input box.</li> <li> If your cursor is at the right place in Word: <ul><li>Click <strong>Add &amp; Cite</strong> → it inserts immediately.</li></ul> Otherwise: <ul><li>Click <strong>Add</strong> → it saves in your library to cite later.</li></ul> </li> <li>You can add optional notes (page/line and remarks).</li> <li>Re-use items in your library via the <strong>Cite</strong> button beside each result.</li> <li>Duplicates are detected and you’ll get a notification.</li> <li>Change citation style anytime (APA, IEEE, etc.); in-text and bibliography update.</li> <li>Multiple numeric cites: place them adjacent and then merge to <code>[2,3]</code> or <code>[2–3]</code> if needed.</li> <li>Bibliography formatting (font, size, spacing, color, alignment) is adjustable below.</li> </ol> </div> </div> </div> <div id=\\\"toast\\\" class=\\\"toast\\\" aria-live=\\\"polite\\\"></div> <div class=\\\"pane\\\"> <textarea id=\\\"bibtexInput\\\" placeholder=\\\"Paste BibTeX entry here…\\\"></textarea> <div id=\\\"noteInputs\\\"> <input id=\\\"notePage\\\" placeholder=\\\"Page / para / line\\\"/> <input id=\\\"noteText\\\" placeholder=\\\"Your note (optional)\\\"/> </div> <div id=\\\"controlsRow\\\"> <button id=\\\"btnAddOnly\\\">Add</button> <button id=\\\"btnAddCite\\\">Add &amp; Cite</button> <select id=\\\"styleSelect\\\" aria-label=\\\"Citation style\\\"> <option value=\\\"apa\\\">APA</option> <option value=\\\"ieee\\\">IEEE</option> <option value=\\\"harvard\\\">Harvard</option> <option value=\\\"acs\\\">American Chemical Society</option> <option value=\\\"vancouver\\\">Vancouver</option> </select> </div> <div class=\\\"row\\\" id=\\\"styleBadgeRow\\\"> <span id=\\\"styleBadge\\\" class=\\\"badge\\\">APA</span> </div> <input id=\\\"search\\\" placeholder=\\\"Search author, year, title…\\\"/> <div id=\\\"results\\\"></div> <hr/> <div class=\\\"row\\\"> <button id=\\\"btnInsertCite\\\">Insert citation</button> <button id=\\\"btnUpdateBib\\\">Update bibliography</button> </div> <div class=\\\"row\\\" style=\\\"margin-top:12px\\\"> <button id=\\\"btnResetNumbering\\\" title=\\\"Forget first-cited order only\\\">Reset numbering</button> <button id=\\\"btnClearLibrary\\\" title=\\\"Delete all saved entries\\\">Clear Library</button> <button id=\\\"btnReload\\\" title=\\\"Reload task pane UI\\\">Reload</button> </div> <section id=\\\"bibFormat\\\"> <div class=\\\"section-title\\\">Bibliography Format</div> <div id=\\\"bibFormatRow\\\"> <div class=\\\"form-chunk\\\"> <label for=\\\"bibFont\\\">Font:</label> <select id=\\\"bibFont\\\"> <option value=\\\"Times New Roman\\\" selected=\\\"selected\\\">Times New Roman</option> <option value=\\\"Calibri\\\">Calibri</option> <option value=\\\"Arial\\\">Arial</option> <option value=\\\"Cambria\\\">Cambria</option> </select> </div> <div class=\\\"form-chunk\\\"> <label for=\\\"bibSize\\\">Size:</label> <input id=\\\"bibSize\\\" type=\\\"number\\\" value=\\\"12\\\" min=\\\"8\\\" max=\\\"24\\\" style=\\\"width:4.5em\\\"> </div> <div class=\\\"form-chunk\\\"> <label for=\\\"bibSpacing\\\">Line spacing:</label> <input id=\\\"bibSpacing\\\" type=\\\"number\\\" value=\\\"14\\\" min=\\\"10\\\" max=\\\"36\\\" style=\\\"width:4.5em\\\"> </div> <div class=\\\"form-chunk\\\"> <label for=\\\"bibAlign\\\">Alignment:</label> <select id=\\\"bibAlign\\\"> <option value=\\\"Left\\\" selected=\\\"selected\\\">Left</option> <option value=\\\"Justified\\\">Justified</option> <option value=\\\"Centered\\\">Centered</option> <option value=\\\"Right\\\">Right</option> </select> </div> <div class=\\\"form-chunk\\\"> <label for=\\\"bibColor\\\">Font color:</label> <input id=\\\"bibColor\\\" class=\\\"swatch\\\" type=\\\"color\\\" value=\\\"#333333\\\"/> </div> </div> </section> </div> <div id=\\\"confirmBar\\\" class=\\\"confirm-bar\\\" style=\\\"display:none\\\"> <span id=\\\"confirmMsg\\\"></span> <button id=\\\"confirmYes\\\">Yes</button> <button id=\\\"confirmNo\\\">Cancel</button> </div> </body> </html>\";\n// Exports\nexport default code;"],"names":["exports","BibtexParser","this","months","notKey","pos","input","entries","Array","currentEntry","setInput","t","getEntries","isWhitespace","s","match","canCommentOut","undefined","skipWhitespace","substring","length","tryMatch","matchAt","value_braces","bracecount","start","escaped","end","value_comment","str","brcktCnt","value_quotes","single_value","k","key","indexOf","toLowerCase","value","values","push","join","key_equals_value","key_value_list","kv","entry_body","d","directive","preamble","comment","entry","bibtex","string","toJSON","b","toBibtex","json","out","i","entryType","citationKey","entryTags","tags","jdx","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","m","g","globalThis","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","test","Error","replace","p","baseURI","self","href","bib","require","parseBibtex","raw","text","trim","map","it","_it$entryTags","id","Math","random","toString","slice","type","fields","createdAt","Date","toISOString","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","bind","l","TypeError","done","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","getStore","or","OfficeRuntime","storage","getItem","_callee","_context","localStorage","setItem","_callee2","_context2","removeItem","_callee3","_context3","LIB_KEY","ORDER_KEY","getLibrary","_getLibrary","_callee4","_context4","JSON","parse","saveLibrary","_x","_saveLibrary","_callee5","lib","_context5","stringify","upsertEntry","_x2","_upsertEntry","_callee6","_context6","_objectSpread","getCitedOrder","_getCitedOrder","_callee7","_context7","setCitedOrder","_x3","_setCitedOrder","_callee8","ids","_context8","markCited","_x4","_markCited","_callee9","order","_context9","includes","clearCitedOrder","_clearCitedOrder","_callee0","_context0","clearLibrary","_clearLibrary","_callee1","_context1","normalizeStyle","style","formatInText","index","sty","author","editor","split","firstAuthorSurname","year","isNumericStyle","concat","formatBibliographyEntry","title","j","journal","booktitle","volume","number","pages","doi","getOrCreateBibCC","_getOrCreateBibCC","ctx","heading","existing","afterHeading","cc","contentControls","getByTag","load","sync","items","getRange","insertParagraph","Word","InsertLocation","after","insertContentControl","tag","updateBibliography","_updateBibliography","opts","seen","list","_args7","Set","filter","has","add","_toConsumableArray","sort","localeCompare","run","_ref3","bibCC","lines","bibText","rng","paras","_iterator3","_step3","body","h","paragraphs","find","styleBuiltIn","BuiltInStyleName","heading1","insertText","_createForOfIteratorHelper","fontName","font","name","fontSize","size","color","alignment","lineSpacing","err","_x11","_scanCitationsInDoc","_ref5","controls","_iterator4","_step4","startsWith","_x12","rerenderAllCitations","_x5","_x6","_x7","_rerenderAllCitations","_ref6","_iterator5","_step5","idx","newText","_t2","max","_x13","parseBracketIndices","inside","bag","_step","_iterator","_step2","_iterator2","Boolean","part","parseInt","_part$split$map2","_slicedToArray","x","min","formatCitationGroup","indices","arr","from","prev","cur","NaN","mergeAdjacentCitationsInParagraph","_mergeAdjacentCitationsInParagraph","_callee11","_context11","_ref7","_callee10","sel","para","group","allNums","_iterator6","_step6","txt","merged","_context10","getSelection","getFirst","forEach","delete","_x14","_insertCitationControl","_callee15","isNumeric","dbg","FORCE_APPEND_END","NO_CC_FALLBACK","SAFE_MODE_NO_MERGE","setSelectedTextAsync","_context15","__WORDREF_DEBUG__","NO_CONTENT_CONTROL_FALLBACK","Office","context","setSelectedDataAsync","coercionType","CoercionType","Text","res","status","AsyncResultStatus","Succeeded","_ref8","_callee14","parent","_r2","nums","candidate","_r3","_nums","tryCreateCC","_parent","_para","afterPara","_r4","_context14","parentContentControl","isNullObject","_callee12","all","_iterator7","_step7","rr","_t3","_context12","compareLocationWith","_ref0","_callee13","range","_context13","appearance","_x16","_x15","Cite","insertCitationControl","_x8","_x9","_x0","_x1","scanCitationsInDoc","getBibFormatOpts","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","_document$getElementB5","getElementById","alignRaw","Alignment","centered","right","justified","left","normalizeAlignment","$","getStyle","_$","simpleInsert","_simpleInsert","ensureSelection","_cc","_ref4","_sel","sel2","select","console","warn","updateStyleBadge","badge","label","ieee","numeric","apa","mla","harvard","acs","vancouver","textContent","ensureCitedIndex","_ensureCitedIndex","onAddOnly","_onAddOnly","bibbox","_$9","_$0","where","note","_t5","Bib","showToast","refreshResults","flashResultRow","notes","onAddAndCite","_onAddAndCite","_$1","_$10","citeText","np","nt","_t8","refreshBibliographyNow","onInsertOnly","_onInsertOnly","_t0","error","debugInfo","String","onResetNumbering","_onResetNumbering","askConfirm","onClearLibraryClick","_onClearLibraryClick","_refreshBibliographyNow","cited","_refreshResults","query","q","filtered","container","markify","norm","_e$notes","highlightText","innerHTML","_e$notes2","meta","querySelectorAll","btn","addEventListener","_t10","getAttribute","normTitle","isLikelyBibtex","findExistingFromBibtex","_findExistingFromBibtex","parsed","needle","nid","hit","nd","_hit","_hit2","reason","msg","classList","setTimeout","remove","haystackHtml","tokens","tok","rx","RegExp","row","querySelector","CSS","escape","scrollIntoView","behavior","block","message","bar","yes","no","display","cleanup","removeEventListener","onYes","onNo","onUpdateBib","_onUpdateBib","currentIds","_t12","onStyleChanged","_onStyleChanged","_callee16","_t13","_context16","onReady","_$2","_$3","_$4","_$5","_$6","_$7","_$8","_document$getElementB6","_document$getElementB8","_document$getElementB0","fontColorInput","search","reload","_document$getElementB7","_document$getElementB9","backgroundColor","reasonMsg","URL"],"sourceRoot":""}